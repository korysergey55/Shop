{"version":3,"sources":["services/api.js","redux/cart/cartOperations.js","redux/products/productsSelectors.js","pages/pagesStyled/ProductItemDetailsStyled.js","pages/ProductItemDetails.js","redux/products/productsOperations.js"],"names":["baseURL","getAllAdvByCategoryApi","category","a","axios","get","response","data","console","log","createNewAdvApi","newAdv","post","getProductByIDApi","id","addToCartOperation","dispatch","Notification","addToCart","setError","remuveAllFromCartOperation","remuveAllFromCart","getIpadsSelector","state","products","items","ipads","getProductWithIdSelector","productWithId","ProductDetailsContainer","styled","div","withRouter","history","useHistory","location","useLocation","match","useRouteMatch","useDispatch","productById","useSelector","params","productId","productID","useEffect","setProductWithId","getProductByIdOperation","className","onClick","push","from","name","src","image","alt","description","isSale","price"],"mappings":"wPAGMA,EAAU,wDAEHC,EAAsB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,+EAEbC,IAAMC,IAAIL,EAAO,yBAAqBE,EAArB,UAFJ,cAE9BI,EAF8B,yBAG7BA,EAASC,MAHoB,gCAKpCC,QAAQC,IAAR,MALoC,yDAAH,sDAStBC,EAAe,uCAAG,WAAOR,EAAUS,GAAjB,eAAAR,EAAA,+EAENC,IAAMQ,KAC5BZ,EAAO,yBAAqBE,EAArB,SACPS,GAJ4B,cAEvBL,EAFuB,yBAMtBA,GANsB,gCAQ7BE,QAAQC,IAAR,MAR6B,yDAAH,wDAoBfI,EAAiB,uCAAG,WAAOX,EAAUY,GAAjB,eAAAX,EAAA,+EAERC,IAAMC,IAC5BL,EAAO,yBAAqBE,EAArB,YAAiCY,EAAjC,UAHuB,cAEzBR,EAFyB,yBAKxBA,EAASC,MALe,gCAO/BC,QAAQC,IAAR,MAP+B,yDAAH,yD,kJC7BxBM,EAAqB,SAACR,GAAD,8CAAU,WAAOS,GAAP,SAAAb,EAAA,sEAWnCc,YAAa,UAXsB,SAY7BD,EAASE,YAAUX,IAZU,uDAcnCU,YAAa,UACbD,EAASG,YAAS,EAAD,KAfkB,yDAAV,uDAmBrBC,EAA6B,SAACb,GAAD,8CAAU,WAAOS,GAAP,SAAAb,EAAA,+EAErCa,EAASK,eAF4B,OAG3CJ,YAAa,qBAH8B,gDAK3CA,YAAa,UACbD,EAASG,YAAS,EAAD,KAN0B,yDAAV,wD,iCCvBnC,oEAAO,IAEMG,EAAmB,SAACC,GAAD,OAAWA,EAAMC,SAASC,MAAMC,OAGnDC,EAA2B,SAACJ,GAAD,OAAWA,EAAMC,SAASI,gB,6DCJrDC,E,MAA0BC,EAAOC,IAAV,gpC,yFC6ErBC,uBAjEY,WAC1B,IAAMC,EAAUC,cACVC,EAAWC,cACXC,EAAQC,cACRtB,EAAWuB,cACXC,EAAcC,YAAYd,KAE1BzB,EAAWmC,EAAMK,OAAOxC,SACxByC,EAAYN,EAAMK,OAAOE,UAE/BC,qBAAU,WACT7B,ECSqC,SAACd,EAAUY,GAAX,8CAAkB,WAAOE,GAAP,eAAAb,EAAA,+EAEhCU,YAAkBX,EAAUY,GAFI,OAEjDR,EAFiD,OAGvDU,EAAS8B,YAAiBxC,IAH6B,gDAKvDU,EAASG,YAAS,EAAD,KALsC,yDAAlB,sDDT5B4B,CAAwB7C,EAAUyC,MACzC,CAAC3B,EAAUd,EAAUyC,IAQxB,OACC,eAACd,EAAD,WACC,wBAAQmB,UAAU,SAASC,QARd,WACVd,EAASZ,MACZU,EAAQiB,KAAKf,EAASZ,MAAM4B,MACtBlB,EAAQiB,KAAR,oBAA0BhD,KAKhC,qBAICsC,GACA,sBAAKQ,UAAU,UAAf,UACC,oBAAIA,UAAU,gBAAd,SAA+BR,EAAYY,OAC3C,qBAAKJ,UAAU,eAAf,SACC,qBACCK,IAAKb,EAAYc,MACjBC,IAAKf,EAAYY,KACjBJ,UAAU,oBAGZ,mBAAGA,UAAU,cAAb,SAA4BR,EAAYgB,cACxC,oBAAGR,UAAU,aAAb,UACER,EAAYiB,OACZ,qCACC,sBAAMT,UAAU,gBAAhB,SAAiCR,EAAYkB,MAAQ,MAAa,IAClE,sBAAMV,UAAU,mBAAhB,SAAoCR,EAAYkB,WAGjD,sBAAMV,UAAU,mBAAhB,SAAoCR,EAAYkB,QAEhD,yBAEF,sBAAKV,UAAU,UAAf,UACC,wBACCC,QAAS,kBAAMjC,EAASD,YAAmByB,KAC3CQ,UAAU,kBAFX,yBAMA,wBAAQC,QAAS,GAAID,UAAU,SAA/B","file":"static/js/7.10de30bf.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// const baseURL = \"https://react-shop-5c360-default-rtdb.firebaseio.com/\"; //korysergey55@gmail.com\r\nconst baseURL = \"https://criptoshop-62529-default-rtdb.firebaseio.com/\"; //korysergeyDev@gmail.com\r\n\r\nexport const getAllAdvByCategoryApi = async (category) => {\r\n try {\r\n  const response = await axios.get(baseURL + `advertisements/${category}.json`);\r\n  return response.data;\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n};\r\n\r\nexport const createNewAdvApi = async (category, newAdv) => {\r\n try {\r\n  const response = await axios.post(\r\n   baseURL + `advertisements/${category}.json`,\r\n   newAdv\r\n  );\r\n  return response;\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n};\r\n\r\nexport const deleteAdvApi = async (category, id) => {\r\n try {\r\n  await axios.delete(baseURL + `advertisements/${category}/${id}.json`);\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n};\r\n\r\nexport const getProductByIDApi = async (category, id) => {\r\n try {\r\n  const response = await axios.get(\r\n   baseURL + `advertisements/${category}/${id}.json`\r\n  );\r\n  return response.data;\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n};\r\n\r\nexport const createNewOrderApi = async (order) => {\r\n try {\r\n  await axios.post(baseURL + \"orders.json\", order);\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n};\r\n","import Notification from \"../../Components/notify\";\r\nimport { addToCart, remuveAllFromCart, setError } from \"./cartActions\";\r\n// import { useSelector } from \"react-redux\";\r\n// import { cartItemSelector } from \"./cartSelectors\";\r\n\r\nconst addToCartOperation = (data) => async (dispatch) => {\r\n //  const cartItems = useSelector(cartItemSelector);\r\n //  if (\r\n //   cartItems.filter((item) =>\r\n //    item.name.toLowerCase().trim().includes(data.name.toLowerCase().trim())\r\n //   )\r\n //  ) {\r\n //   console.log(\"exist\");\r\n //   return\r\n //  }\r\n try {\r\n  Notification(\"sucses\");\r\n  await dispatch(addToCart(data));\r\n } catch (error) {\r\n  Notification(\"danger\");\r\n  dispatch(setError(error));\r\n }\r\n};\r\n\r\nconst remuveAllFromCartOperation = (data) => async (dispatch) => {\r\n try {\r\n  await dispatch(remuveAllFromCart());\r\n  Notification(\"deleteAllFromCart\");\r\n } catch (error) {\r\n  Notification(\"danger\");\r\n  dispatch(setError(error));\r\n }\r\n};\r\n\r\nexport { addToCartOperation, remuveAllFromCartOperation };\r\n","\r\nexport const getPhonesSelector = (state) => state.products.items.phones;\r\nexport const getLaptopsSelector = (state) => state.products.items.laptops;\r\nexport const getIpadsSelector = (state) => state.products.items.ipads;\r\nexport const getAppleWatchesSelector = (state) => state.products.items.appleWatches;\r\nexport const getAirPodsSelector = (state) => state.products.items.airPods;\r\nexport const getProductWithIdSelector = (state) => state.products.productWithId;\r\n\r\nexport const getLoaderSelector = (state) => state.products.loader;\r\n\r\nexport const getProductsSelector = (state, category) =>\r\n state.products.items[category];","import styled from \"styled-components\";\r\n\r\nexport const ProductDetailsContainer = styled.div`\r\n width: 100%;\r\n padding: 20px;\r\n\r\n .content {\r\n  border-radius: 14px;\r\n  border: 1px solid #a8a8a8;\r\n  padding: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n }\r\n .listItemTitle {\r\n  font-size: 16px;\r\n  text-align: center;\r\n }\r\n\r\n .imageWrapper {\r\n  height: 130px;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 10px 0;\r\n }\r\n\r\n .listItemImage {\r\n  height: 100%;\r\n }\r\n .colorsList {\r\n  display: flex;\r\n  list-style: none;\r\n }\r\n .priceTitle {\r\n  text-align: center;\r\n  font-size: 20px;\r\n }\r\n .withSalePrice {\r\n  text-decoration: line-through;\r\n  color: #dc143c;\r\n }\r\n .withoutSalePrice {\r\n  font-weight: 600;\r\n  color: #819ff5;\r\n  font-size: 30px;\r\n }\r\n .options {\r\n  display: flex;\r\n  align-items: center;\r\n }\r\n .detailsButton {\r\n  width: 50%;\r\n  border-radius: 14px 0 0 14px;\r\n  margin-right: 1px;\r\n }\r\n .addToCartButton {\r\n  width: 50%;\r\n  border-radius: 7px;\r\n  margin-right: 10px;\r\n }\r\n .bayNow {\r\n  width: 50%;\r\n  border-radius: 7px;\r\n  margin-right: 10px;\r\n }\r\n @media (min-width: 768px) {\r\n  width: 50%;\r\n }\r\n\r\n @media (min-width: 1024px) {\r\n  width: 25%;\r\n }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { ProductDetailsContainer } from \"./pagesStyled/ProductItemDetailsStyled\";\r\n\r\nimport {\r\n useHistory,\r\n useLocation,\r\n useRouteMatch,\r\n withRouter,\r\n} from \"react-router-dom\";\r\nimport { getProductWithIdSelector } from \"../redux/products/productsSelectors\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProductByIdOperation } from \"../redux/products/productsOperations\";\r\nimport { addToCartOperation } from \"../redux/cart/cartOperations\";\r\n\r\nconst ProductItemDetails = () => {\r\n const history = useHistory();\r\n const location = useLocation();\r\n const match = useRouteMatch();\r\n const dispatch = useDispatch();\r\n const productById = useSelector(getProductWithIdSelector);\r\n\r\n const category = match.params.category;\r\n const productId = match.params.productID;\r\n\r\n useEffect(() => {\r\n  dispatch(getProductByIdOperation(category, productId));\r\n }, [dispatch, category, productId]);\r\n\r\n const goBack = () => {\r\n  if (location.state) {\r\n   history.push(location.state.from);\r\n  } else history.push(`/products/${category}`);\r\n };\r\n\r\n return (\r\n  <ProductDetailsContainer>\r\n   <button className=\"goBack\" onClick={goBack}>\r\n    Go back\r\n   </button>\r\n\r\n   {productById && (\r\n    <div className=\"content\">\r\n     <h3 className=\"listItemTitle\">{productById.name}</h3>\r\n     <div className=\"imageWrapper\">\r\n      <img\r\n       src={productById.image}\r\n       alt={productById.name}\r\n       className=\"listItemImage\"\r\n      />\r\n     </div>\r\n     <p className=\"description\">{productById.description}</p>\r\n     <p className=\"priceTitle\">\r\n      {productById.isSale ? (\r\n       <>\r\n        <span className=\"withSalePrice\">{productById.price - 1000}</span>{\" \"}\r\n        <span className=\"withoutSalePrice\">{productById.price}</span>\r\n       </>\r\n      ) : (\r\n       <span className=\"withoutSalePrice\">{productById.price}</span>\r\n      )}\r\n      {\" грн\"}\r\n     </p>\r\n     <div className=\"options\">\r\n      <button\r\n       onClick={() => dispatch(addToCartOperation(productById))}\r\n       className=\"addToCartButton\"\r\n      >\r\n       Add to cart\r\n      </button>\r\n      <button onClick={\"\"} className=\"bayNow\">\r\n       Bay Now\r\n      </button>\r\n     </div>\r\n    </div>\r\n   )}\r\n  </ProductDetailsContainer>\r\n );\r\n};\r\n\r\nexport default withRouter(ProductItemDetails);\r\n","import { getAllAdvByCategoryApi, getProductByIDApi } from \"../../services/api\";\r\nimport {\r\n setLaptops,\r\n setPhones,\r\n setProductWithId,\r\n setError,\r\n setLoader,\r\n} from \"./productsActions\";\r\n\r\nexport const getAllAdvByCategoryApiOperation =\r\n (category) => async (dispatch) => {\r\n  try {\r\n   dispatch(setLoader());\r\n   const response = await getAllAdvByCategoryApi(category);\r\n   if (response) {\r\n    const products = Object.keys(response).map((key) => ({\r\n     id: key,\r\n     ...response[key],\r\n    }));\r\n\r\n    if (category === \"phones\") {\r\n     dispatch(setPhones(products));\r\n    }\r\n    if (category === \"laptops\") {\r\n     dispatch(setLaptops(products));\r\n    }\r\n   }\r\n  } catch (error) {\r\n   dispatch(setError(error));\r\n  } finally {\r\n   dispatch(setLoader());\r\n  }\r\n };\r\n\r\nexport const getProductByIdOperation = (category, id) => async (dispatch) => {\r\n try {\r\n  const response = await getProductByIDApi(category, id);\r\n  dispatch(setProductWithId(response));\r\n } catch (error) {\r\n  dispatch(setError(error));\r\n }\r\n};\r\n"],"sourceRoot":""}