{
    "version": 3,
    "sources": [
        "Components/section/SectionStyled.js",
        "Components/section/Section.js",
        "../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js",
        "Components/admin/AdvFormStyled.js",
        "Components/admin/AdvForm.js",
        "../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js",
        "../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js",
        "../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js",
        "pages/AdminPage.js"
    ],
    "names": [
        "SectionContainer",
        "styled",
        "div",
        "Section",
        "children",
        "myTitle",
        "title",
        "isMobiles",
        "className",
        "toUpperCase",
        "defaultProps",
        "arr",
        "i",
        "AdvFormContainer",
        "productCategories",
        "initialState",
        "category",
        "name",
        "image",
        "description",
        "price",
        "isSale",
        "AdvForm",
        "state",
        "onHandleChange",
        "e",
        "target",
        "value",
        "type",
        "checked",
        "setState",
        "onHandleSubmit",
        "preventDefault",
        "createNewAdvApi",
        "onSubmit",
        "this",
        "onChange",
        "map",
        "Component",
        "y2",
        "Array",
        "isArray",
        "Symbol",
        "iterator",
        "Object",
        "_arr",
        "_n",
        "_d",
        "_e",
        "undefined",
        "_s",
        "_i",
        "next",
        "done",
        "push",
        "length",
        "err",
        "unsupportedIterableToArray",
        "TypeError",
        "console",
        "log",
        "AdminPage",
        "data",
        "addNewAdv"
    ],
    "mappings": "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",
    "file": "static/js/4.d4169104.chunk.js",
    "sourcesContent": [
        "import styled from \"styled-components\";\r\n\r\nexport const SectionContainer = styled.div`\r\n  padding: 10px 0 20px 0;\r\n  &:not(:last-child) {\r\n    border-bottom: 2px solid #819ff5;\r\n  }\r\n\r\n  .sectionTitle {\r\n    color: #819ff5;\r\n    font-size: 16px;\r\n    text-align: center;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    .sectionTitle {\r\n      padding-left: 10px;\r\n      text-align: start;\r\n    }\r\n  }\r\n`;\r\n",
        "import React from \"react\";\r\nimport { SectionContainer } from \"./SectionStyled\";\r\n\r\nconst Section = ({ children, title: myTitle, isMobiles }) => {\r\n  return (\r\n    <SectionContainer>\r\n      <h2 className='sectionTitle'>{myTitle.toUpperCase()}</h2>\r\n      {children}\r\n    </SectionContainer>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.defaultProps = {\r\n  isMobiles: false,\r\n};\r\n",
        "import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}",
        "import styled from \"styled-components\";\r\n\r\nexport const AdvFormContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 20px 10px 0 10px;\r\n\r\n  .advFormLabel {\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-size: 16px;\r\n  }\r\n  .advFormInput {\r\n    border: 1px solid #819ff5;\r\n    height: 30px;\r\n    border-radius: 14px;\r\n    padding-left: 10px;\r\n    margin: 5px 0;\r\n    font-size: 14px;\r\n    outline: none;\r\n    &:hover {\r\n      border: 2px solid #5f73a1;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .advFormLabelCheckBox {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n    font-size: 16px;\r\n  }\r\n  .advFormCheckBox {\r\n    margin-left: 10px;\r\n  }\r\n  .submitButton {\r\n    display: block;\r\n    margin: 0 auto;\r\n    margin-top: 20px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    .advFormContent {\r\n      display: flex;\r\n      flex-direction: row;\r\n    }\r\n    .leftColumn,\r\n    .rightColumn {\r\n      width: 50%;\r\n      padding: 0 5px;\r\n    }\r\n    .advFormLabelCheckBox {\r\n      margin-top: 30px;\r\n    }\r\n    .submitButton {\r\n      margin-top: 20px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    .advFormContent {\r\n      justify-content: center;\r\n    }\r\n    .leftColumn,\r\n    .rightColumn {\r\n      width: 30%;\r\n      padding: 0 10px;\r\n    }\r\n  }\r\n`;\r\n",
        "import React, { Component } from \"react\";\r\nimport { AdvFormContainer } from \"./AdvFormStyled\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { createNewAdvApi } from \"../../services/api\";\r\n\r\nconst productCategories = [\"phones\", \"laptops\"];\r\n\r\nconst initialState = {\r\n  category: productCategories[0],\r\n  name: \"\",\r\n  image: \"\",\r\n  description: \"\",\r\n  price: \"\",\r\n  isSale: false,\r\n};\r\n\r\nclass AdvForm extends Component {\r\n  state = {\r\n    ...initialState,\r\n  };\r\n\r\n  onHandleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    if (type === \"checkbox\") {\r\n      this.setState({ [name]: checked });\r\n      return;\r\n    }\r\n    this.setState({ [name]: value });\r\n  };\r\n  onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    createNewAdvApi(this.state.category, { ...this.state });\r\n  };\r\n  render() {\r\n    return (\r\n      <AdvFormContainer>\r\n        <form onSubmit={this.onHandleSubmit} className='advForm'>\r\n          <div className='advFormContent'>\r\n            <div className='leftColumn'>\r\n              <label className='advFormLabel'>\r\n                Category\r\n                <select\r\n                  value={this.state.category}\r\n                  name='category'\r\n                  className='advFormInput'\r\n                  onChange={this.onHandleChange}>\r\n                  {productCategories.map((category) => (\r\n                    <option value={category} key={category}>\r\n                      {category}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </label>\r\n\r\n              <label className='advFormLabel'>\r\n                Name\r\n                <input\r\n                  type='text'\r\n                  name='name'\r\n                  value={this.state.name}\r\n                  className='advFormInput'\r\n                  onChange={this.onHandleChange}\r\n                />\r\n              </label>\r\n              <label className='advFormLabel'>\r\n                Picture\r\n                <input\r\n                  type='text'\r\n                  name='image'\r\n                  value={this.state.image}\r\n                  className='advFormInput'\r\n                  onChange={this.onHandleChange}\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className='rightColumn'>\r\n              <label className='advFormLabel'>\r\n                Description\r\n                <input\r\n                  type='text'\r\n                  name='description'\r\n                  value={this.state.description}\r\n                  className='advFormInput'\r\n                  onChange={this.onHandleChange}\r\n                />\r\n              </label>\r\n              <label className='advFormLabel'>\r\n                Price\r\n                <input\r\n                  type='text'\r\n                  name='price'\r\n                  value={this.state.price}\r\n                  className='advFormInput'\r\n                  onChange={this.onHandleChange}\r\n                />\r\n              </label>\r\n              <label className='advFormLabelCheckBox'>\r\n                In sale\r\n                <input\r\n                  type='checkbox'\r\n                  name='isSale'\r\n                  checked={this.state.isSale}\r\n                  className='advFormCheckBox'\r\n                  onChange={this.onHandleChange}\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <button type='submit' className='submitButton'>\r\n            Add product\r\n          </button>\r\n        </form>\r\n      </AdvFormContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdvForm;\r\n\r\nconst arr = [\r\n  [100, 200],\r\n  [300, 500],\r\n];\r\nconst [, [, y2]] = arr;\r\nconsole.log(y2);\r\n",
        "export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}",
        "export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}",
        "export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}",
        "import React from \"react\";\r\nimport Section from \"../Components/section/Section\";\r\nimport AdvForm from \"../Components/admin/AdvForm\";\r\n\r\nconst AdminPage = ({ data }) => {\r\n  return (\r\n    <>\r\n      <Section title='Administration'>\r\n        <AdvForm addNewAdv={data.addNewAdv} />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n"
    ],
    "sourceRoot": ""
}