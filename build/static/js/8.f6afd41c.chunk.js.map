{"version":3,"sources":["Components/phoneList/phoneListItem/PhoneListItemStyled.js","Components/phoneList/phoneListItem/PhoneListItem.js","Components/phoneList/PhoneListStyled.js","Components/phoneList/PhoneList.js"],"names":["ListItemContainer","styled","li","props","color","withRouter","phone","addToCart","history","match","location","addProduct","className","name","src","image","alt","isSale","price","toFixed","onClick","push","pathname","path","id","state","from","PhoneListContainer","ul","PhoneList","getPhones","a","getAllAdvByCategory","response","phones","Object","keys","map","key","setPhones","this","Component","mapDispatchToProps","connect","products","items"],"mappings":"kNAWaA,GATcC,IAAOC,GAAV,iKAKF,SAACC,GAAD,OAAWA,EAAMC,SAINH,IAAOC,GAAV,0qC,cC6CfG,eApDO,SAAC,GAAoD,IAAD,EAAjDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACnDC,EAAa,WACjBJ,EAAUD,IAQZ,OACE,cAACN,EAAD,UACE,sBAAKY,UAAU,UAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+BN,EAAMO,OACrC,qBAAKD,UAAU,eAAf,SACE,qBAAKE,IAAKR,EAAMS,MAAOC,IAAKV,EAAMO,KAAMD,UAAU,oBAQpD,oBAAGA,UAAU,aAAb,UACGN,EAAMW,OACL,qCACE,uBAAML,UAAU,gBAAhB,cAAkCN,EAAMY,SAAc,IACtD,sBAAMN,UAAU,mBAAhB,UACIN,EAAMY,MAAQZ,EAAMY,MAAQ,IAAIC,QAAQ,QAI9C,sBAAMP,UAAU,mBAAhB,SAAoCN,EAAMY,QAE3C,UAEH,sBAAKN,UAAU,UAAf,UACE,2BACEQ,QAAST,EACTC,UAAU,iBAFZ,yBAjCY,WAClBJ,EAAQa,KAAK,CACXC,SAAS,GAAD,OAAKb,EAAMc,KAAX,YAAmBjB,EAAMkB,IACjCC,MAAO,CAAEC,KAAMhB,EAASY,eA8BpB,wCAMA,wBAAQF,QAAST,EAAYC,UAAU,kBAAvC,oCC7CGe,EAAqB1B,IAAO2B,GAAV,yG,gCCMzBC,E,4MAIJC,U,sBAAY,8BAAAC,EAAA,sEACaC,YAAoB,UADjC,QACJC,EADI,UAGFC,EAASC,OAAOC,KAAKH,GAAUI,KAAI,SAACC,GAAD,oBACvCd,GAAIc,GACDL,EAASK,OAEd,EAAKnC,MAAMoC,UAAUL,IAPb,2C,uDAHZ,WACEM,KAAKV,c,oBAYP,WAAU,IAAD,OACP,OACE,cAACH,EAAD,UACGa,KAAKrC,MAAM+B,OAAOG,KAAI,SAAC/B,GAAD,OACrB,cAAC,EAAD,CACEA,MAAOA,EAEPC,UAAW,EAAKJ,MAAMI,WADjBD,EAAMkB,a,GApBCiB,aAmClBC,EAAqB,CAAEnC,cAAWgC,eAEzBI,uBARS,SAAClB,GACvB,MAAO,CACLS,OAAQT,EAAMmB,SAASC,MAAMX,UAMOQ,EAAzBC,CAA6Cd","file":"static/js/8.f6afd41c.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ColorItemLI = styled.li`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 4px;\r\n  border: 1px solid black;\r\n  background-color: ${(props) => props.color};\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport const ListItemContainer = styled.li`\r\n  width: 100%;\r\n  padding: 20px;\r\n\r\n  .content {\r\n    border-radius: 14px;\r\n    border: 1px solid #a8a8a8;\r\n    padding: 15px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    height: 330px;\r\n  }\r\n  .listItemTitle {\r\n    font-size: 16px;\r\n    text-align: center;\r\n  }\r\n\r\n  .imageWrapper {\r\n    height: 130px;\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 10px 0;\r\n  }\r\n\r\n  .listItemImage {\r\n    height: 100%;\r\n  }\r\n  .colorsList {\r\n    display: flex;\r\n    list-style: none;\r\n  }\r\n  .priceTitle {\r\n    text-align: center;\r\n    font-size: 20px;\r\n  }\r\n  .withSalePrice {\r\n    text-decoration: line-through;\r\n    color: #dc143c;\r\n  }\r\n  .withoutSalePrice {\r\n    font-weight: 600;\r\n    color: #819ff5;\r\n    font-size: 30px;\r\n  }\r\n  .options {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .detailsButton {\r\n    width: 50%;\r\n    border-radius: 14px 0 0 14px;\r\n    margin-right: 1px;\r\n  }\r\n  .addToCartButton {\r\n    width: 50%;\r\n    border-radius: 0 14px 14px 0;\r\n    margin-right: 1px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 25%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ColorItemLI, ListItemContainer } from \"./PhoneListItemStyled\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst PhoneListItem = ({ phone, addToCart, history, match, location }) => {\r\n  const addProduct = () => {\r\n    addToCart(phone);\r\n  };\r\n  const openDetails = () => {\r\n    history.push({\r\n      pathname: `${match.path}/${phone.id}`,\r\n      state: { from: location.pathname },\r\n    });\r\n  };\r\n  return (\r\n    <ListItemContainer>\r\n      <div className='content'>\r\n        <h3 className='listItemTitle'>{phone.name}</h3>\r\n        <div className='imageWrapper'>\r\n          <img src={phone.image} alt={phone.name} className='listItemImage' />\r\n        </div>\r\n\r\n        {/* <ul className='colorsList'>\r\n          {phone.colors.map((color) => (\r\n            <ColorItemLI key={color} color={color} />\r\n          ))}\r\n        </ul> */}\r\n        <p className='priceTitle'>\r\n          {phone.isSale ? (\r\n            <>\r\n              <span className='withSalePrice'> {phone.price}</span>{\" \"}\r\n              <span className='withoutSalePrice'>\r\n                {(phone.price - phone.price / 10).toFixed(0)}\r\n              </span>\r\n            </>\r\n          ) : (\r\n            <span className='withoutSalePrice'>{phone.price}</span>\r\n          )}\r\n          {\" UAH\"}\r\n        </p>\r\n        <div className='options'>\r\n          <button\r\n            onClick={addProduct}\r\n            className='detailsButton'\r\n            onClick={openDetails}>\r\n            Details\r\n          </button>\r\n          <button onClick={addProduct} className='addToCartButton'>\r\n            Add to cart\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </ListItemContainer>\r\n  );\r\n};\r\n\r\nexport default withRouter(PhoneListItem);\r\n","import styled from \"styled-components\";\r\n\r\nexport const PhoneListContainer = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport PhoneListItem from \"./phoneListItem/PhoneListItem\";\r\nimport { PhoneListContainer } from \"./PhoneListStyled\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPhones } from \"../../redux/products/productsActions\";\r\nimport { getAllAdvByCategory } from \"../../services/api\";\r\nimport { addToCart } from \"../../redux/cart/cartActions\";\r\n\r\nclass PhoneList extends Component {\r\n  componentDidMount() {\r\n    this.getPhones();\r\n  }\r\n  getPhones = async () => {\r\n    const response = await getAllAdvByCategory(\"phones\");\r\n    if (response) {\r\n      const phones = Object.keys(response).map((key) => ({\r\n        id: key,\r\n        ...response[key],\r\n      }));\r\n      this.props.setPhones(phones);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <PhoneListContainer>\r\n        {this.props.phones.map((phone) => (\r\n          <PhoneListItem\r\n            phone={phone}\r\n            key={phone.id}\r\n            addToCart={this.props.addToCart}\r\n          />\r\n        ))}\r\n      </PhoneListContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    phones: state.products.items.phones,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { addToCart, setPhones };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneList);\r\n"],"sourceRoot":""}