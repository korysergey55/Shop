{"version":3,"sources":["Components/auth/AuthFormStyled.module.css","Components/auth/options.js","Components/auth/AuthForm.js","pages/AuthPage.js"],"names":["module","exports","formOptions","name","value","countryName","AuthForm","state","email","password","gender","licence","country","onHandleChange","event","setState","target","handleLicenceChange","evt","isCheckbox","type","checked","onHandleSubmit","preventDefault","props","location","pathname","registrationUserOperation","history","loginUserOperation","reset","className","styles","formAuth","onSubmit","this","title","labelName","htmlFor","onChange","inputName","required","placeholder","pattern","radioContainer","select","map","option","checkbox","buttonGo","disabled","Component","mapDispatchToProps","connect","ownProps","withRouter","AuthPage"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,SAAW,iCAAiC,MAAQ,8BAA8B,UAAY,kCAAkC,UAAY,kCAAkC,eAAiB,uCAAuC,OAAS,+BAA+B,SAAW,iCAAiC,SAAW,mC,mICqBxUC,EAtBK,CACnB,CACCC,KAAM,UACNC,MAAO,UACPC,YAAa,WAEd,CACCF,KAAM,UACNC,MAAO,SACPC,YAAa,UAEd,CACCF,KAAM,UACNC,MAAO,MACPC,YAAa,OAEd,CACCF,KAAM,UACNC,MAAO,UACPC,YAAa,Y,OCTTC,E,4MACLC,MAAQ,CACPC,MAAO,GACPC,SAAU,GACVC,OAAQ,SACRC,SAAS,EACTC,QAAS,M,EAGVC,eAAiB,SAACC,GACjB,EAAKC,SAAL,eAAiBD,EAAME,OAAOb,KAAOW,EAAME,OAAOZ,S,EAGnDa,oBAAsB,SAACC,GACtB,IAAMC,EAAiC,aAApBD,EAAIF,OAAOI,KAC9B,EAAKL,SAAS,CACbJ,QAASQ,EAAaD,EAAIF,OAAOK,QAAUH,EAAIF,OAAOZ,S,EAIxDkB,eAAiB,SAACR,GACjBA,EAAMS,iBAC2B,kBAAjC,EAAKC,MAAMC,SAASC,SACjB,EAAKF,MAAMG,0BACV,CACCnB,MAAO,EAAKD,MAAMC,MAClBC,SAAU,EAAKF,MAAME,SACrBN,KAAM,EAAKI,MAAMJ,MAElB,EAAKqB,MAAMI,SAEZ,EAAKJ,MAAMK,mBACV,CACCrB,MAAO,EAAKD,MAAMC,MAClBC,SAAU,EAAKF,MAAME,UAEtB,EAAKe,MAAMI,SAGf,EAAKE,S,EAGNA,MAAQ,WACP,EAAKf,SAAS,CAAEP,MAAO,GAAIC,SAAU,M,4CAGtC,WAAU,IAAD,OACR,OACC,uBAAMsB,UAAWC,IAAOC,SAAUC,SAAUC,KAAKb,eAAjD,UAEC,oBAAIS,UAAWC,IAAOI,MAAtB,SACmC,kBAAjCD,KAAKX,MAAMC,SAASC,SAClB,oBACA,eAG8B,kBAAjCS,KAAKX,MAAMC,SAASC,UACpB,wBAAOK,UAAWC,IAAOK,UAAWC,QAASH,KAAKhC,KAAlD,iBAEC,uBACCoC,SAAUJ,KAAKtB,eACfkB,UAAWC,IAAOQ,UAClBpB,KAAK,OACLjB,KAAK,OACLC,MAAO+B,KAAK5B,MAAMJ,KAClBsC,UAAQ,EACRC,YAAY,aACZC,QAAQ,yHACRP,MAAM,ucAKT,wBAAOL,UAAWC,IAAOK,UAAWC,QAASH,KAAK3B,MAAlD,kBAEC,uBACC+B,SAAUJ,KAAKtB,eACfkB,UAAWC,IAAOQ,UAClBpB,KAAK,QACLjB,KAAK,QACLC,MAAO+B,KAAK5B,MAAMC,MAClBiC,UAAQ,EACRC,YAAY,mBAGd,wBAAOX,UAAWC,IAAOK,UAAWC,QAASH,KAAK1B,SAAlD,qBAEC,uBACC8B,SAAUJ,KAAKtB,eACfkB,UAAWC,IAAOQ,UAClBpB,KAAK,WACLjB,KAAK,WACLC,MAAO+B,KAAK5B,MAAME,SAClBgC,UAAQ,EACRC,YAAY,sBAIoB,kBAAjCP,KAAKX,MAAMC,SAASC,UACpB,qCACC,sBAAKK,UAAWC,IAAOY,eAAvB,UACC,wBAAOb,UAAWC,IAAOK,UAAzB,UACC,uBACCN,UAAWC,IAAOQ,UAClBpB,KAAK,QACLjB,KAAK,SACLC,MAAM,OACNmC,SAAUJ,KAAKtB,eACfQ,QAA+B,SAAtBc,KAAK5B,MAAMG,SAPtB,gDAWA,wBAAOqB,UAAWC,IAAOK,UAAzB,UACC,uBACCN,UAAWC,IAAOQ,UAClBpB,KAAK,QACLjB,KAAK,SACLC,MAAM,SACNmC,SAAUJ,KAAKtB,eACfQ,QAA+B,WAAtBc,KAAK5B,MAAMG,SAPtB,mDAaD,wBACCqB,UAAWC,IAAOa,OAClB1C,KAAK,UACLC,MAAO+B,KAAK5B,MAAMK,QAClB2B,SAAUJ,KAAKtB,eACf4B,UAAQ,EALT,SAOEvC,EAAY4C,KAAI,SAACC,GAAD,OAChB,wBACC3C,MAAO2C,EAAO3C,MACdD,KAAM4C,EAAO5C,KACbkB,QAAS,EAAKd,MAAMK,UAAYmC,EAAO3C,MAHxC,SAKE2C,EAAO1C,mBAOX,wBAAO0B,UAAWC,IAAOK,UAAzB,UACC,uBACCN,UAAWC,IAAOgB,SAClB5B,KAAK,WACLjB,KAAK,UACLoC,SAAUJ,KAAKlB,oBACfI,QAASc,KAAK5B,MAAMI,QACpB8B,UAAQ,IAPV,mIAaF,wBACCV,UAAWC,IAAOiB,SAClB7B,KAAK,SACL8B,UAAWf,KAAK5B,MAAMI,QAHvB,SAKmC,kBAAjCwB,KAAKX,MAAMC,SAASC,SAClB,eACA,iB,GArKeyB,aA6KjBC,EAAqB,CAC1BzB,8BACAE,wBAGcwB,eAPS,SAAC9C,EAAO+C,GAAR,MAAsB,KAS7CF,EAFcC,CAGbE,YAAWjD,ICrLEkD,UARE,WACf,OACA,mCACC,cAAC,EAAD","file":"static/js/1.f50c059f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formAuth\":\"AuthFormStyled_formAuth__LlriS\",\"title\":\"AuthFormStyled_title__3Kc0P\",\"labelName\":\"AuthFormStyled_labelName__1brbH\",\"inputName\":\"AuthFormStyled_inputName__2R4pO\",\"radioContainer\":\"AuthFormStyled_radioContainer__UhWsd\",\"select\":\"AuthFormStyled_select__3eR_M\",\"checkbox\":\"AuthFormStyled_checkbox__2yIQx\",\"buttonGo\":\"AuthFormStyled_buttonGo__1qbLg\"};","const formOptions = [\r\n {\r\n  name: \"country\",\r\n  value: \"Ukraine\",\r\n  countryName: \"Ukraine\",\r\n },\r\n {\r\n  name: \"country\",\r\n  value: \"Poland\",\r\n  countryName: \"Poland\",\r\n },\r\n {\r\n  name: \"country\",\r\n  value: \"USA\",\r\n  countryName: \"USA\",\r\n },\r\n {\r\n  name: \"country\",\r\n  value: \"Bolivia\",\r\n  countryName: \"Bolivia\",\r\n },\r\n];\r\nexport default formOptions;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"../auth/AuthFormStyled.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n registrationUserOperation,\r\n loginUserOperation,\r\n} from \"../../redux/auth/authOperations\";\r\nimport formOptions from \"./options\";\r\n\r\nclass AuthForm extends Component {\r\n state = {\r\n  email: \"\",\r\n  password: \"\",\r\n  gender: \"female\",\r\n  licence: true,\r\n  country: null,\r\n };\r\n\r\n onHandleChange = (event) => {\r\n  this.setState({ [event.target.name]: event.target.value });\r\n };\r\n\r\n handleLicenceChange = (evt) => {\r\n  const isCheckbox = evt.target.type === \"checkbox\";\r\n  this.setState({\r\n   licence: isCheckbox ? evt.target.checked : evt.target.value,\r\n  });\r\n };\r\n\r\n onHandleSubmit = (event) => {\r\n  event.preventDefault();\r\n  this.props.location.pathname === \"/registration\"\r\n   ? this.props.registrationUserOperation(\r\n      {\r\n       email: this.state.email,\r\n       password: this.state.password,\r\n       name: this.state.name,\r\n      },\r\n      this.props.history\r\n     )\r\n   : this.props.loginUserOperation(\r\n      {\r\n       email: this.state.email,\r\n       password: this.state.password,\r\n      },\r\n      this.props.history\r\n     );\r\n\r\n  this.reset();\r\n };\r\n\r\n reset = () => {\r\n  this.setState({ email: \"\", password: \"\" });\r\n };\r\n\r\n render() {\r\n  return (\r\n   <form className={styles.formAuth} onSubmit={this.onHandleSubmit}>\r\n\r\n    <h2 className={styles.title}>\r\n     {this.props.location.pathname === \"/registration\"\r\n      ? \"Registration Page\"\r\n      : \"Login Page\"}\r\n    </h2>\r\n    \r\n    {this.props.location.pathname === \"/registration\" && (\r\n     <label className={styles.labelName} htmlFor={this.name}>\r\n      Name\r\n      <input\r\n       onChange={this.onHandleChange}\r\n       className={styles.inputName}\r\n       type=\"text\"\r\n       name=\"name\"\r\n       value={this.state.name}\r\n       required\r\n       placeholder=\"Enter Name\"\r\n       pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n       title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n      />\r\n     </label>\r\n    )}\r\n\r\n    <label className={styles.labelName} htmlFor={this.email}>\r\n     Email\r\n     <input\r\n      onChange={this.onHandleChange}\r\n      className={styles.inputName}\r\n      type=\"email\"\r\n      name=\"email\"\r\n      value={this.state.email}\r\n      required\r\n      placeholder=\"Enter email\"\r\n     />\r\n    </label>\r\n    <label className={styles.labelName} htmlFor={this.password}>\r\n     Password\r\n     <input\r\n      onChange={this.onHandleChange}\r\n      className={styles.inputName}\r\n      type=\"password\"\r\n      name=\"password\"\r\n      value={this.state.password}\r\n      required\r\n      placeholder=\"Enter Password\"\r\n     />\r\n    </label>\r\n\r\n    {this.props.location.pathname === \"/registration\" && (\r\n     <>\r\n      <div className={styles.radioContainer}>\r\n       <label className={styles.labelName}>\r\n        <input\r\n         className={styles.inputName}\r\n         type=\"radio\"\r\n         name=\"gender\"\r\n         value=\"male\"\r\n         onChange={this.onHandleChange}\r\n         checked={this.state.gender === \"male\"}\r\n        />\r\n        Мужчина\r\n       </label>\r\n       <label className={styles.labelName}>\r\n        <input\r\n         className={styles.inputName}\r\n         type=\"radio\"\r\n         name=\"gender\"\r\n         value=\"female\"\r\n         onChange={this.onHandleChange}\r\n         checked={this.state.gender === \"female\"}\r\n        />\r\n        Женщина\r\n       </label>\r\n      </div>\r\n\r\n      <select\r\n       className={styles.select}\r\n       name=\"country\"\r\n       value={this.state.country}\r\n       onChange={this.onHandleChange}\r\n       required\r\n      >\r\n       {formOptions.map((option) => (\r\n        <option\r\n         value={option.value}\r\n         name={option.name}\r\n         checked={this.state.country === option.value}\r\n        >\r\n         {option.countryName}\r\n        </option>\r\n       ))}\r\n       {/* <option value=\"Ukraine\" name=\"country\">Ukraine</option>\r\n       <option value=\"Poland\" name=\"country\">Poland</option> */}\r\n      </select>\r\n\r\n      <label className={styles.labelName}>\r\n       <input\r\n        className={styles.checkbox}\r\n        type=\"checkbox\"\r\n        name=\"licence\"\r\n        onChange={this.handleLicenceChange}\r\n        checked={this.state.licence}\r\n        required\r\n       />\r\n       Соглашаюсь с условиями\r\n      </label>\r\n     </>\r\n    )}\r\n    <button\r\n     className={styles.buttonGo}\r\n     type=\"submit\"\r\n     disabled={!this.state.licence}\r\n    >\r\n     {this.props.location.pathname === \"/registration\"\r\n      ? \"Registration\"\r\n      : \"Login\"}\r\n    </button>\r\n   </form>\r\n  );\r\n }\r\n}\r\nconst mapStateToProps = (state, ownProps) => ({});\r\n\r\nconst mapDispatchToProps = {\r\n registrationUserOperation,\r\n loginUserOperation,\r\n};\r\n\r\nexport default connect(\r\n mapStateToProps,\r\n mapDispatchToProps\r\n)(withRouter(AuthForm));\r\n\r\n// class AuthForm extends Component {\r\n//  state = {\r\n//   email: \"\",\r\n//   password: \"\",\r\n//   gender: \"female\",\r\n//   licence: true,\r\n//   country: null,\r\n//  };\r\n\r\n//  onHandleChange = (event) => {\r\n//   this.setState({ [event.target.name]: event.target.value });\r\n//  };\r\n\r\n//  handleLicenceChange = (evt) => {\r\n//   const isCheckbox = evt.target.type === \"checkbox\";\r\n//   this.setState({\r\n//    licence: isCheckbox ? evt.target.checked : evt.target.value,\r\n//   });\r\n//  };\r\n\r\n//  onHandleSubmit = (event) => {\r\n//   event.preventDefault();\r\n//   this.props.location.pathname === \"/registration\"\r\n//    ? this.props.registrationUserOperation(\r\n//       {\r\n//        email: this.state.email,\r\n//        password: this.state.password,\r\n//        name: this.state.name,\r\n//       },\r\n//       this.props.history\r\n//      )\r\n//    : this.props.loginUserOperation(\r\n//       {\r\n//        email: this.state.email,\r\n//        password: this.state.password,\r\n//       },\r\n//       this.props.history\r\n//      );\r\n\r\n//   this.reset();\r\n//  };\r\n\r\n//  reset = () => {\r\n//   this.setState({ email: \"\", password: \"\" });\r\n//  };\r\n\r\n//  render() {\r\n//   return (\r\n//    <form className={styles.formAuth} onSubmit={this.onHandleSubmit}>\r\n//     <h2 className={styles.title}>\r\n//      {this.props.location.pathname === \"/registration\"\r\n//       ? \"Registration Page\"\r\n//       : \"Login Page\"}\r\n//     </h2>\r\n//     {this.props.location.pathname === \"/registration\" && (\r\n//      <label className={styles.labelName} htmlFor={this.name}>\r\n//       Name\r\n//       <input\r\n//        onChange={this.onHandleChange}\r\n//        className={styles.inputName}\r\n//        type=\"text\"\r\n//        name=\"name\"\r\n//        value={this.state.name}\r\n//        required\r\n//        placeholder=\"Enter Name\"\r\n//        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//        id={this.nameInputId}\r\n//       />\r\n//      </label>\r\n//     )}\r\n//     <label className={styles.labelName} htmlFor={this.email}>\r\n//      Email\r\n//      <input\r\n//       onChange={this.onHandleChange}\r\n//       className={styles.inputName}\r\n//       type=\"email\"\r\n//       name=\"email\"\r\n//       value={this.state.email}\r\n//       required\r\n//       placeholder=\"Enter email\"\r\n//       id={this.emailInputId}\r\n//      />\r\n//     </label>\r\n//     <label className={styles.labelName} htmlFor={this.password}>\r\n//      Password\r\n//      <input\r\n//       onChange={this.onHandleChange}\r\n//       className={styles.inputName}\r\n//       type=\"password\"\r\n//       name=\"password\"\r\n//       value={this.state.password}\r\n//       required\r\n//       placeholder=\"Enter Password\"\r\n//       id={this.passwordInputId}\r\n//      />\r\n//     </label>\r\n//     {this.props.location.pathname === \"/registration\" && (\r\n//      <>\r\n//       <div className={styles.radioContainer}>\r\n//        <label className={styles.labelName}>\r\n//         <input\r\n//          className={styles.inputName}\r\n//          type=\"radio\"\r\n//          name=\"gender\"\r\n//          value=\"male\"\r\n//          onChange={this.onHandleChange}\r\n//          checked={this.state.gender === \"male\"}\r\n//         />\r\n//         Мужчина\r\n//        </label>\r\n//        <label className={styles.labelName}>\r\n//         <input\r\n//          className={styles.inputName}\r\n//          type=\"radio\"\r\n//          name=\"gender\"\r\n//          value=\"female\"\r\n//          onChange={this.onHandleChange}\r\n//          checked={this.state.gender === \"female\"}\r\n//         />\r\n//         Женщина\r\n//        </label>\r\n//       </div>\r\n//       <select\r\n//        className={styles.select}\r\n//        name=\"country\"\r\n//        value={this.state.country}\r\n//        onChange={this.onHandleChange}\r\n//        required\r\n//       >\r\n//        {formOptions.map((option) => (\r\n//         <option\r\n//          value={option.value}\r\n//          name={option.name}\r\n//          checked={this.state.country === option.value}\r\n//         >\r\n//          {option.countryName}\r\n//         </option>\r\n//        ))}\r\n//        {/* <option value=\"Ukraine\">Ukraine</option>\r\n//        <option value=\"Poland\">Poland</option> */}\r\n//       </select>\r\n//       <label className={styles.labelName}>\r\n//        <input\r\n//         className={styles.checkbox}\r\n//         type=\"checkbox\"\r\n//         name=\"licence\"\r\n//         onChange={this.handleLicenceChange}\r\n//         checked={this.state.licence}\r\n//         required\r\n//        />\r\n//        Соглашаюсь с условиями\r\n//       </label>\r\n//      </>\r\n//     )}\r\n//     <button\r\n//      className={styles.buttonGo}\r\n//      type=\"submit\"\r\n//      disabled={!this.state.licence}\r\n//     >\r\n//      {this.props.location.pathname === \"/registration\"\r\n//       ? \"Registration\"\r\n//       : \"Login\"}\r\n//     </button>\r\n//    </form>\r\n//   );\r\n//  }\r\n// }\r\n// const mapStateToProps = (state, ownProps) => ({});\r\n\r\n// const mapDispatchToProps = {\r\n//  registrationUserOperation,\r\n//  loginUserOperation,\r\n// };\r\n\r\n// export default connect(\r\n//  mapStateToProps,\r\n//  mapDispatchToProps\r\n// )(withRouter(AuthForm));\r\n","import React from \"react\";\r\nimport AuthForm from \"../Components/auth/AuthForm\";\r\nconst AuthPage = () => {\r\n  return (\r\n  <>\r\n   <AuthForm/>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n"],"sourceRoot":""}